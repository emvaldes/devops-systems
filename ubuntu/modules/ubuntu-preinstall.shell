#!/usr/bin/env bash
# Script: ubuntu-preinstall.shell

## -----------------------------------------------------------------------------
## Objective: Printing empty lines (output)
function newline () { echo -e; return 0; };

export preinstall_logfile="/tmp/preinstall.log";
cat /dev/null > ${preinstall_logfile};

echo -e "Warning: APT Updating System! " \
| tee -a "${autologin_logfile}";
newline;

sudo apt update --yes \
| tee -a "${autologin_logfile}";

newline; echo -e "Warning: APT Listing Upgradable Packages! " \
| tee -a "${autologin_logfile}";
newline;

apt list --upgradable \
| tee -a "${autologin_logfile}";

newline; echo -e "Warning: APT Upgrading System! " \
| tee -a "${autologin_logfile}";
newline;

sudo apt upgrade --yes \
| tee -a "${autologin_logfile}";

newline; echo -e "Warning: APT Autoremove Packages! " \
| tee -a "${autologin_logfile}";
newline;

sudo apt autoremove --yes \
| tee -a "${autologin_logfile}";

echo -e "Notice: Starting Pre-Install ..." \
| tee -a "${preinstall_logfile}";

declare -a packages=(
    curl
    git
    jq
    python-is-python3
  );

for package in ${packages[@]}; do

  newline; echo -e "Notice: Installing ${package} package ..." \
  | tee -a "${preinstall_logfile}";
  newline;

  sudo apt install ${package} --yes \
  | tee -a "${preinstall_logfile}";

done;

newline; echo -e "Notice: Completed Pre-Install! " \
| tee -a "${preinstall_logfile}";
