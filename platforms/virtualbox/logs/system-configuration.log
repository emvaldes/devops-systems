$ ./virtualbox-appliance.shell --instance="ubuntu-desktop" \
                               --account="devops" \
                               --secret="~/.secrets/devops.secret" \
                               --ssh-key="${HOME}/.ssh/devnetops.pub" \
                               --configure \
;

Comment: Enforcing VBox Shared folder [/Users/emvaldes/.local/tmp/vbox/shared]

Comment: Configuring Machine Folder [/Users/emvaldes/.virtualization/virtualbox]

Comment: Listing '/Users/emvaldes/.ssh/devnetops.pub' fingerprint

2048 MD5:66:e2:d1:90:86:de:37:84:9a:f6:00:28:46:c4:4a:2b devnetops (RSA)
2048 SHA256:gcyl5gvESkOKr6aMRbT24TTt7MMliEQlwL2vuiwFI2E devnetops (RSA)
+---[RSA 2048]----+
|o.+..   .        |
|oE.+ o +         |
|+o+ + * .        |
|++.* +   .       |
|.+*.*.o S        |
| +o+.B...        |
|.o. +.+o         |
|B. . .o          |
|+=o   ..         |
+----[SHA256]-----+

Comment: Virtual Machine location [/Users/emvaldes/.virtualization/virtualbox/ubuntu-desktop]

Comment: Obtaining Virtual Machine details

Comment: Extracting Bridged Network configurations

Bridged MAC Address: 08:00:27:84:5f:2b
Bridged Interface:   en5

Comment: Executing ARP Scanning -> /Users/emvaldes/.localnet :

Password:
Interface: en0, type: EN10MB, MAC: 88:66:5a:04:b6:21, IPv4: 192.168.0.196
Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)
192.168.0.1	f8:79:0a:cb:5f:94	ARRIS Group, Inc.
192.168.0.4	34:98:b5:a7:86:b9	NETGEAR
192.168.0.2	3c:37:86:23:6d:aa	NETGEAR
192.168.0.10	90:72:40:05:99:09	Apple, Inc.
192.168.0.151	08:00:27:84:5f:2b	PCS Systemtechnik GmbH
192.168.0.158	e0:4f:43:7a:35:87	Universal Global Scientific Industrial Co., Ltd.
192.168.0.166	ac:e2:d3:9d:53:4b	Hewlett Packard
192.168.0.164	00:68:eb:4b:44:9a	HP Inc.
192.168.0.162	40:a9:cf:f7:07:66	Amazon Technologies Inc.
192.168.0.175	10:96:93:a9:c5:9c	Amazon Technologies Inc.
192.168.0.182	58:ef:68:7d:93:31	Belkin International Inc.
192.168.0.171	a4:08:01:65:f6:35	Amazon Technologies Inc.
192.168.0.198	48:78:5e:c8:6a:0a	Amazon Technologies Inc.
192.168.0.199	66:1a:04:15:ec:ee	(Unknown: locally administered)
192.168.0.165	50:14:79:e0:80:c6	iRobot Corporation
192.168.0.163	50:14:79:e4:1e:b2	iRobot Corporation
192.168.0.173	14:0a:c5:5a:8e:f2	Amazon Technologies Inc.
192.168.0.189	44:61:32:f6:06:d2	ecobee inc
192.168.0.184	10:09:f9:89:03:d0	Amazon Technologies Inc.
192.168.0.159	5a:97:22:04:fa:80	(Unknown: locally administered)
192.168.0.195	92:ab:b6:60:c6:e9	(Unknown: locally administered)
192.168.0.197	64:1c:b0:af:0e:b2	Samsung Electronics Co.,Ltd
192.168.0.187	16:ea:b9:03:4c:bb	(Unknown: locally administered)

513 packets received by filter, 0 packets dropped by kernel
Ending arp-scan 1.10.0: 256 hosts scanned in 1.981 seconds (129.23 hosts/sec). 23 responded

##
# Host Database
#
# localhost is used to configure the loopback interface
# when the system is booting.  Do not change this entry.
##
127.0.0.1	localhost
255.255.255.255	broadcasthost
::1             localhost
# Added by Docker Desktop
# To allow the same kube context to work on the host and the container:
127.0.0.1 kubernetes.docker.internal
# End of section
192.168.0.151       ubuntu-desktop      desktop.ubuntu.local

Comment: Updating  Record in /Users/emvaldes/.ssh/config file!

Host ubuntu-desktop
  AddKeysToAgent yes
  HostName 192.168.0.151
  User devops
  StrictHostKeyChecking no
  IdentityFile ~/.ssh/private/devnetops


Comment: Identifying 192.168.0.151 in /Users/emvaldes/.ssh/known_hosts file

Warning: Purging any 192.168.0.151 existing records!

# Host 192.168.0.151 found: line 37
# Host 192.168.0.151 found: line 38
# Host 192.168.0.151 found: line 39
/Users/emvaldes/.ssh/known_hosts updated.
Original contents retained as /Users/emvaldes/.ssh/known_hosts.old

Comment: Copying the SSH Access Key to Guest System

Warning: Removing any existing '/Users/emvaldes/.local/tmp/vbox/ssh-copy-id.expect' file!
/Users/emvaldes/.local/tmp/vbox/ssh-copy-id.expect

Comment: Fetching raw.githubusercontent.com/emvaldes/devops-systems/master/platforms/virtualbox/modules/ssh-copy-id.expect

Comment: Executing 'ssh-copy-id.expect' template

spawn ssh-copy-id -i /Users/emvaldes/.ssh/devnetops.pub -o StrictHostKeyChecking=no devops@192.168.0.151
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/Users/emvaldes/.ssh/devnetops.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
Pseudo-terminal will not be allocated because stdin is not a terminal.
devops@192.168.0.151's password:
Authenticated to 192.168.0.151 ([192.168.0.151]:22) using "password".
Learned new hostkey: RSA SHA256:c0Hji3jcUocqdiWOiwerM9UyfgQ9Zemi/TkxN7ImTBg
Learned new hostkey: ECDSA SHA256:0sRpvsoisutK55ENSgJ2wVJ+36dJ4UkxSubbxPhrWhM
Adding new key for 192.168.0.151 to /Users/emvaldes/.ssh/known_hosts: ssh-rsa SHA256:c0Hji3jcUocqdiWOiwerM9UyfgQ9Zemi/TkxN7ImTBg
Adding new key for 192.168.0.151 to /Users/emvaldes/.ssh/known_hosts: ecdsa-sha2-nistp256 SHA256:0sRpvsoisutK55ENSgJ2wVJ+36dJ4UkxSubbxPhrWhM
Transferred: sent 5000, received 4020 bytes, in 0.5 seconds
Bytes per second: sent 9325.3, received 7497.5

Number of key(s) added:        1

Now try logging into the machine, with:   "ssh -o 'StrictHostKeyChecking=no' 'devops@192.168.0.151'"
and check to make sure that only the key(s) you wanted were added.


Warning: Removing any existing '/Users/emvaldes/.local/tmp/vbox/sudoers-privileges.shell' file!
/Users/emvaldes/.local/tmp/vbox/sudoers-privileges.shell

Comment: Fetching raw.githubusercontent.com/emvaldes/devops-systems/master/ubuntu/modules/sudoers-privileges.shell

Comment: Listing 'sudoers-privileges.shell' configurations

#!/usr/bin/env bash
# Script: sudoers-privileges.shell

## -----------------------------------------------------------------------------
## Objective: Printing empty lines (output)
function newline () { echo -e; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing (output) without terminating newline
function inline ()  { echo -en "${@}"; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing custom messages (formatting is provided)
function display () {
    message="${1}";
    [[ ${#message} -gt 0 ]] && {
      newline; echo -e "${message}"; ## newline;
    }; return 0;
  };

## -----------------------------------------------------------------------------
## Objective: Printing inline to simulate progress (output)
function progress () { inline '.'; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing warning messages (output)
function warning ()  { display "Warning: ${@}! "; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing comment messages (output)
function comment ()  { display "Comment: ${@}"; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing custom messages (output)
function message ()  { echo -e "${@}"; return 0; }; alias print='message';

## Provisioning auto-configuration for passwordless sudo.
echo -e "devops\n" | sudo -S systemctl status ssh 2>&1>/dev/null

export privileges_logfile="/tmp/sudoers-privileges.log";
cat /dev/null > ${privileges_logfile};

comment "Starting Sudoers Privileges" \
| tee -a "${privileges_logfile}";

## DevOps - Service Account
export devops_account='devops';

## Configuring Service Account passwordless access to sudo-requests
if [[ ! -e /etc/sudoers.d/${devops_account} ]]; then

        warning "Granting un-restricted execution rights" \
        | tee -a "${privileges_logfile}";

        ## Injecting Passwordless Configuration
        ## Warning: This is not recommended! sudo permissions should be granted
        ##          in a per-command basis limiting the scope of granted rights.

        echo "${devops_account}  ALL=(ALL)  NOPASSWD: ALL" \
        | sudo tee /etc/sudoers.d/${devops_account};

        warning "Correcting ${devops_account} file permissions" \
        | tee -a "${privileges_logfile}";

        ## Service Account /etc/sudoers.d/ file-permissions
        sudo chmod -v 0440 /etc/sudoers.d/${devops_account} \
        | tee -a "${privileges_logfile}";
        ## mode of '/etc/sudoers.d/devops' changed
        ## from 0644 (rw-r--r--) to 0440 (r--r-----)

  else  warning "Sudoers Privileges already enabled" \
        | tee -a "${privileges_logfile}";
        return 0;

fi;

comment "Listing ${devops_account} file permissions! " \
| tee -a "${privileges_logfile}";

sudo ls -al /etc/sudoers.d/${devops_account}\
| tee -a "${privileges_logfile}";

comment "Completed Sudoers Privileges! " \
| tee -a "${privileges_logfile}";

Comment: Executing the 'sudoers-privileges.shell' script

[sudo] password for devops:
Comment: Starting Sudoers Privileges

Warning: Granting un-restricted execution rights!
devops  ALL=(ALL)  NOPASSWD: ALL

Warning: Correcting devops file permissions!
mode of '/etc/sudoers.d/devops' changed from 0644 (rw-r--r--) to 0440 (r--r-----)

Comment: Listing devops file permissions!
-r--r----- 1 root root 33 Jan 28 03:06 /etc/sudoers.d/devops

Comment: Completed Sudoers Privileges!

Warning: Removing any existing '/Users/emvaldes/.local/tmp/vbox/sudoers-autologin.shell' file!
/Users/emvaldes/.local/tmp/vbox/sudoers-autologin.shell

Comment: Fetching raw.githubusercontent.com/emvaldes/devops-systems/master/ubuntu/modules/sudoers-autologin.shell

Comment: Listing 'sudoers-autologin.shell' configurations

#!/usr/bin/env bash
# Script: sudoers-autologin.shell

## -----------------------------------------------------------------------------
## Objective: Printing empty lines (output)
function newline () { echo -e; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing (output) without terminating newline
function inline ()  { echo -en "${@}"; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing custom messages (formatting is provided)
function display () {
    message="${1}";
    [[ ${#message} -gt 0 ]] && {
      newline; echo -e "${message}"; ## newline;
    }; return 0;
  };

## -----------------------------------------------------------------------------
## Objective: Printing inline to simulate progress (output)
function progress () { inline '.'; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing warning messages (output)
function warning ()  { display "Warning: ${@}! "; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing comment messages (output)
function comment ()  { display "Comment: ${@}"; return 0; };

## -----------------------------------------------------------------------------
## Objective: Printing custom messages (output)
function message ()  { echo -e "${@}"; return 0; }; alias print='message';

export autologin_logfile="/tmp/sudoers-autologin.log";
cat /dev/null > ${autologin_logfile};

comment "Starting Sudoers Auto-Login" \
| tee -a "${autologin_logfile}";

## DevOps - Service Account
export devops_account='devops';

warning "Selectively Installing SSH Pass" \
| tee -a "${autologin_logfile}";
newline;

## This allows to run SSH using the keyboard-interactive password authentication
## mode, but in a non-interactive way. SSH uses direct TTY access to ensure that
## the password is indeed issued by an interactive keyboard user.

## Notice: It will be removed later in the script. An alternative to this is to
## use the legendary expect command but this is a quick solution.

sudo apt install sshpass --yes | tee -a "${autologin_logfile}";

comment "Auto-Generating SSH Access Keys" \
| tee -a "${autologin_logfile}";
newline;

export sshkey_fileset="${HOME}/.ssh/id_rsa";
ssh-keygen -t rsa \
           -b 4096 \
           -C ubuntu-desktop \
           -f ${sshkey_fileset} \
           -N '' <<<y \
| tee -a "${autologin_logfile}";

comment "Copying SSH ID to authorized-keys file" \
| tee -a "${autologin_logfile}";

## Removing all keys beloging to the localhost
ssh-keygen -R localhost;

## Copying the SSH Access Key to itself (testing)
message "${devops_account}" \
   | sshpass ssh-copy-id -i ${sshkey_fileset} \
                         -o StrictHostKeyChecking=no \
                            localhost \
   | tee -a "${autologin_logfile}";

## Performing basic housecleaning
rm -fvr ${HOME}/.ssh/ssh-copy-id* \
| tee -a "${autologin_logfile}";

warning "Removing SSH Pass tool" \
| tee -a "${autologin_logfile}";
newline;

## Removing this tool as mentioned before
sudo apt remove sshpass --yes \
| tee -a "${autologin_logfile}";

comment "Perfoming Auto-Remove operations" \
| tee -a "${autologin_logfile}";
newline;

## autoremove (apt-get(8)) autoremove is used to remove packages that were
## automatically installed to satisfy dependencies for other packages and
## are now no longer needed as dependencies changed or the package(s) needing
## them were removed in the meantime.
sudo apt autoremove --yes \
| tee -a "${autologin_logfile}";

# I am disabling this operational block as it's not working as intended.

# ## Removing Service Account password
# ## Warning: This will disable the GUI login's behavior (passwordless)
# sudo passwd --delete ${devops_account} \
# | tee -a "${autologin_logfile}";
# ## passwd: password expiry information changed.
#
# warning "Disabled Service Account password";
# | tee -a "${autologin_logfile}";
# newline;

comment "Completed Sudoers Auto-Login! " \
| tee -a "${autologin_logfile}";

Comment: Executing the 'sudoers-autologin.shell' script

Comment: Starting Sudoers Auto-Login

Warning: Selectively Installing SSH Pass!

Reading package lists...
Building dependency tree...
Reading state information...
The following package was automatically installed and is no longer required:
  systemd-hwe-hwdb
Use 'sudo apt autoremove' to remove it.
The following NEW packages will be installed:
  sshpass
0 upgraded, 1 newly installed, 0 to remove and 259 not upgraded.
Need to get 11.7 kB of archives.
After this operation, 35.8 kB of additional disk space will be used.
Get:1 http://us.archive.ubuntu.com/ubuntu jammy/universe amd64 sshpass amd64 1.09-1 [11.7 kB]
Fetched 11.7 kB in 0s (47.7 kB/s)
Selecting previously unselected package sshpass.
(Reading database ... 205251 files and directories currently installed.)
Preparing to unpack .../sshpass_1.09-1_amd64.deb ...
Unpacking sshpass (1.09-1) ...
Setting up sshpass (1.09-1) ...
Processing triggers for man-db (2.10.2-1) ...

Comment: Auto-Generating SSH Access Keys

Generating public/private rsa key pair.
Your identification has been saved in /home/devops/.ssh/id_rsa
Your public key has been saved in /home/devops/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:Vh5A9X1pSBBsmf+sTGcTSryWQLbWdgxoUe+nyYGiLQ4 ubuntu-desktop
The key's randomart image is:
+---[RSA 4096]----+
|       .o.o+Oo   |
|         . @.oo .|
|          B *.++.|
|         o = Bo= |
|        S + = O.o|
|       . o . B X.|
|      E o . + B .|
|       o .   o   |
|        .        |
+----[SHA256]-----+

Comment: Copying SSH ID to authorized-keys file

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh -o 'StrictHostKeyChecking=no' 'localhost'"
and check to make sure that only the key(s) you wanted were added.


Warning: Removing SSH Pass tool!

Reading package lists...
Building dependency tree...
Reading state information...
The following package was automatically installed and is no longer required:
  systemd-hwe-hwdb
Use 'sudo apt autoremove' to remove it.
The following packages will be REMOVED:
  sshpass
0 upgraded, 0 newly installed, 1 to remove and 259 not upgraded.
After this operation, 35.8 kB disk space will be freed.
(Reading database ... 205256 files and directories currently installed.)
Removing sshpass (1.09-1) ...
Processing triggers for man-db (2.10.2-1) ...

Comment: Perfoming Auto-Remove operations

Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be REMOVED:
  systemd-hwe-hwdb
0 upgraded, 0 newly installed, 1 to remove and 259 not upgraded.
After this operation, 16.4 kB disk space will be freed.
(Reading database ... 205251 files and directories currently installed.)
Removing systemd-hwe-hwdb (249.11.2) ...
Processing triggers for udev (249.11-0ubuntu3.4) ...

Comment: Completed Sudoers Auto-Login!
